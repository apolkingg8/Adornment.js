{"version":3,"sources":["bindWith.jsx"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,CAAC,WAAW,EAAE,CAAA;AAClB,IAAI,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;;AAErC,QAAQ,CAAC,UAAU,EAAE,YAAW;;AAE5B,MAAE,CAAC,kBAAkB,EAAE,YAAW;;AAE9B,YAAI,CAAC,GAAG,EAAC,EAAE,EAAE,GAAG,EAAC,CAAA;;YAGX,CAAC;qBAAD,CAAC;;;;qBAAD,CAAC;;;;uBACA,eAAG;AACF,2BAAO,IAAI,CAAA;iBACd;;;uBACE,eAAG;AACF,2BAAO,IAAI,CAAA;iBACd;;;AANC,aAAC,GADN,QAAQ,CAAC,CAAC,CAAC,CACN,CAAC,KAAD,CAAC;mBAAD,CAAC;;;AASP,YAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAA;AACf,YAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAA;AAChB,cAAM,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACtB,YAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAA;AAChB,cAAM,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;KACzB,CAAC,CAAA;;AAEF,MAAE,CAAC,mBAAmB,EAAE,YAAW;;AAE/B,YAAI,CAAC,GAAG,EAAC,EAAE,EAAE,GAAG,EAAC,CAAA;;YAEX,CAAC;qBAAD,CAAC;sCAAD,CAAC;;;kCAAD,CAAC;;6BACF,QAAQ,CAAC,CAAC,CAAC;uBACT,eAAG;AACF,2BAAO,IAAI,CAAA;iBACd;;;uBAEC,cAAG;AACD,2BAAO,IAAI,CAAA;iBACd;;;6BAEA,QAAQ,CAAC,CAAC,CAAC;uBACT,eAAG;AACF,2BAAO,IAAI,CAAA;iBACd;;;mBAbC,CAAC;;;AAgBP,YAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAA;AACf,YAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAA;AAChB,cAAM,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACtB,YAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAA;AACd,cAAM,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACzB,YAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAA;AAChB,cAAM,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;KACzB,CAAC,CAAA;CACL,CAAC,CAAA","file":"bindWith.js","sourcesContent":["jest.autoMockOff()\nvar bindWith = require('../bindWith')\n\ndescribe('bindWith', function() {\n\n    it('works with class', function() {\n\n        var q = {qq: 123}\n\n        @bindWith(q)\n        class A {\n            foo() {\n                return this\n            }\n            bar() {\n                return this\n            }\n        }\n\n        var a = new A()\n        var _foo = a.foo\n        expect(_foo()).toBe(q)\n        var _bar = a.bar\n        expect(_bar()).toBe(q)\n    })\n\n    it('works with method', function() {\n\n        var q = {qq: 123}\n\n        class A {\n            @bindWith(q)\n            foo() {\n                return this\n            }\n\n            yo() {\n                return this\n            }\n\n            @bindWith(q)\n            bar() {\n                return this\n            }\n        }\n\n        var a = new A()\n        var _foo = a.foo\n        expect(_foo()).toBe(q)\n        var _yo = a.yo\n        expect(_yo()).not.toBe(q)\n        var _bar = a.bar\n        expect(_bar()).toBe(q)\n    })\n})"]}