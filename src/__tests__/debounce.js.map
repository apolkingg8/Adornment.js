{"version":3,"sources":["debounce.jsx"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,CAAC,WAAW,EAAE,CAAA;AAClB,IAAI,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;;AAErC,QAAQ,CAAC,UAAU,EAAE,YAAW;;AAE5B,MAAE,CAAC,kBAAkB,EAAE,YAAW;YAGxB,CAAC;qBAAD,CAAC;;;qBACH,QAAQ,GAAG,CAAC;qBACZ,QAAQ,GAAG,CAAC;;;qBAFV,CAAC;;;;uBAIA,aAAC,CAAC,EAAC,CAAC,EAAE;AACL,wBAAI,CAAC,QAAQ,EAAE,CAAA;AACf,2BAAO,CAAC,GAAC,CAAC,CAAA;iBACb;;;uBACE,aAAC,CAAC,EAAC,CAAC,EAAE;AACL,wBAAI,CAAC,QAAQ,EAAE,CAAA;AACf,2BAAO,CAAC,GAAC,CAAC,CAAA;iBACb;;;AAXC,aAAC,GADN,QAAQ,CAAC,GAAG,CAAC,CACR,CAAC,KAAD,CAAC;mBAAD,CAAC;;;AAcP,YAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAA;;AAEf,SAAC,CAAC,GAAG,EAAE,CAAA;AACP,SAAC,CAAC,GAAG,EAAE,CAAA;AACP,SAAC,CAAC,GAAG,EAAE,CAAA;AACP,cAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;KAC7B,CAAC,CAAA;;AAEF,MAAE,CAAC,mBAAmB,EAAE,YAAW;YAEzB,CAAC;qBAAD,CAAC;sCAAD,CAAC;;qBACH,QAAQ,GAAG,CAAC;;;kCADV,CAAC;;6BAGF,QAAQ,CAAC,GAAG,CAAC;uBACX,aAAC,CAAC,EAAE,CAAC,EAAE;AACN,wBAAI,CAAC,QAAQ,EAAG,CAAA;AAChB,2BAAO,CAAC,GAAG,CAAC,CAAA;iBACf;;;mBAPC,CAAC;;;AAUP,YAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAA;;AAEf,SAAC,CAAC,GAAG,EAAE,CAAA;AACP,SAAC,CAAC,GAAG,EAAE,CAAA;AACP,SAAC,CAAC,GAAG,EAAE,CAAA;AACP,cAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;KAC7B,CAAC,CAAA;CACL,CAAC,CAAA","file":"debounce.js","sourcesContent":["jest.autoMockOff()\nvar debounce = require('../debounce')\n\ndescribe('debounce', function() {\n\n    it('works with class', function() {\n\n        @debounce(100)\n        class A {\n            fooCount = 0\n            barCount = 0\n\n            foo(a,b) {\n                this.fooCount++\n                return a+b\n            }\n            bar(a,b) {\n                this.barCount++\n                return a*b\n            }\n        }\n\n        var a = new A()\n\n        a.foo()\n        a.foo()\n        a.foo()\n        expect(a.fooCount).toBe(0)\n    })\n\n    it('works with method', function() {\n\n        class A {\n            fooCount = 0\n\n            @debounce(100)\n            foo(a, b) {\n                this.fooCount ++\n                return a + b\n            }\n        }\n\n        var a = new A()\n\n        a.foo()\n        a.foo()\n        a.foo()\n        expect(a.fooCount).toBe(0)\n    })\n})"]}