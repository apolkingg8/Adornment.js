{"version":3,"sources":["G:\\GitHub\\decorate_js\\src\\__tests__\\enumerable.jsx"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,CAAC,WAAW,EAAE,CAAA;AAClB,IAAI,UAAU,GAAG,OAAO,CAAC,eAAe,CAAC,CAAA;;AAEzC,QAAQ,CAAC,YAAY,EAAE,YAAW;;AAE9B,MAAE,CAAC,kBAAkB,EAAE,YAAW;YAGxB,CAAC;qBAAD,CAAC;;;;yBAAD,CAAC;;uBACA,eAAG,EAAE;;;uBACL,eAAG,EAAE;;;qBAFN,CAAC;AAAD,aAAC,GADN,UAAU,CAAC,IAAI,CAAC,CACX,CAAC,KAAD,CAAC;mBAAD,CAAC;;;AAKP,YAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAA;AACf,YAAI,IAAI,GAAG,EAAE,CAAA;;AAEb,aAAI,IAAI,GAAG,IAAI,CAAC,EAAE;AACd,gBAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SACjB;;AAED,cAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAA;KACvC,CAAC,CAAA;;AAEF,MAAE,CAAC,mBAAmB,EAAE,YAAW;YAEzB,CAAC;qBAAD,CAAC;sCAAD,CAAC;;;kCAAD,CAAC;;6BACF,UAAU,CAAC,IAAI,CAAC;uBACd,eAAG,EAAE;;;6BACP,UAAU,CAAC,KAAK,CAAC;uBACf,eAAG,EAAE;;;6BACP,UAAU,CAAC,IAAI,CAAC;uBACf,cAAG,EAAE;;;mBANL,CAAC;;;AASP,YAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAA;AACf,YAAI,IAAI,GAAG,EAAE,CAAA;;AAEb,aAAI,IAAI,GAAG,IAAI,CAAC,EAAE;AACd,gBAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SACjB;;AAED,cAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAA;KACtC,CAAC,CAAA;CAsBL,CAAC,CAAA","file":"enumerable.js","sourcesContent":["jest.autoMockOff()\r\nvar enumerable = require('../enumerable')\r\n\r\ndescribe('enumerable', function() {\r\n\r\n    it('works with class', function() {\r\n\r\n        @enumerable(true)\r\n        class A {\r\n            foo() {}\r\n            bar() {}\r\n        }\r\n\r\n        var a = new A()\r\n        var keys = []\r\n\r\n        for(var key in a) {\r\n            keys.push(key)\r\n        }\r\n\r\n        expect(keys).toEqual(['foo', 'bar'])\r\n    })\r\n\r\n    it('works with method', function() {\r\n\r\n        class A {\r\n            @enumerable(true)\r\n            foo() {}\r\n            @enumerable(false)\r\n            bar() {}\r\n            @enumerable(true)\r\n            yo() {}\r\n        }\r\n\r\n        var a = new A()\r\n        var keys = []\r\n\r\n        for(var key in a) {\r\n            keys.push(key)\r\n        }\r\n\r\n        expect(keys).toEqual(['foo', 'yo'])\r\n    })\r\n\r\n    /*it('works with props', function() {\r\n\r\n        class A {\r\n            @enumerable(true)\r\n            foo = 1\r\n            @enumerable(false)\r\n            bar = 2\r\n            @enumerable(true)\r\n            yo = 3\r\n        }\r\n\r\n        var a = new A()\r\n        var keys = []\r\n\r\n        for(var key in a) {\r\n            keys.push(key)\r\n        }\r\n\r\n        expect(keys).toEqual(['foo', 'yo'])\r\n    })*/\r\n})"]}