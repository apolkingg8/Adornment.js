{"version":3,"sources":["bindWith.jsx"],"names":[],"mappings":";;;;;;;;sBAAoB,WAAW;;;;AAE/B,SAAS,WAAW,CAAC,MAAgB,EAAE,KAAa,EAAE;;AAElD,wBAAQ,mBAAmB,CAAC,MAAM,EAAE,UAAS,GAAG,EAAE;;AAE9C,YAAG,OAAO,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;AAC5C,gBAAI,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC;gBACnE,MAAM,GAAG,oBAAQ,SAAS,CAAC,UAAU,CAAC,CAAA;;;;;;;;AAQ1C,sBAAU,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;AAEtC,kBAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,EAAE,UAAU,CAAC,CAAA;SAC3D;KACJ,CAAC,CAAA;;AAEF,WAAO,MAAM,CAAA;CAChB;;AAED,SAAS,YAAY,CAAC,MAAgB,EAAE,GAAW,EAAE,UAAU,EAAE,KAAa,EAAE;AAC5E,QAAI,MAAM,GAAG,oBAAQ,SAAS,CAAC,UAAU,CAAC,CAAA;;;;;;;AAQ1C,cAAU,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;AAEtC,WAAO,UAAU,CAAA;CACpB;;AAED,SAAS,UAAU,CAAC,MAAgB,EAAE,GAAW,EAAE,UAAU,EAAE,KAAa,EAAE;AAC1E,WAAO,CAAC,IAAI,iDAAiD,CAAA;AAC7D,WAAO,UAAU,CAAA;CACpB;;AAED,SAAS,QAAQ,CAAC,KAAa,EAAE;;AAE7B,QAAG,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC1B,4BAAQ,UAAU,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;AAC/C,eAAO;KACV;;AAED,WAAO,YAAkB;0CAAN,IAAI;AAAJ,gBAAI;;;AACnB,4BAAQ,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,CAAC,CAAA;KACtE,CAAA;CACJ;;qBAEc,QAAQ","file":"bindWith.js","sourcesContent":["import Helpers from './_helper'\n\nfunction handleClass(target: Function, input: Object) {\n\n    Helpers.forEachClassOwnKeys(target, function(key) {\n\n        if(typeof target.prototype[key] === \"function\") {\n            var descriptor = Object.getOwnPropertyDescriptor(target.prototype, key),\n                method = Helpers.getMethod(descriptor)\n\n            //delete descriptor.value\n            //delete descriptor.writable\n\n            /*descriptor.get = function() {\n                return method.bind(input);\n            }*/\n            descriptor.value = method.bind(input);\n\n            Object.defineProperty(target.prototype, key, descriptor)\n        }\n    })\n\n    return target\n}\n\nfunction handleMethod(target: Function, key: String, descriptor, input: Object) {\n    var method = Helpers.getMethod(descriptor)\n\n    /*delete descriptor.value\n    delete descriptor.writable\n\n    descriptor.get = function() {\n        return method.bind(input);\n    }*/\n    descriptor.value = method.bind(input);\n\n    return descriptor\n}\n\nfunction handleProp(target: Function, key: String, descriptor, input: Object) {\n    console.warn(`@bindWith should not set on class properties.`)\n    return descriptor\n}\n\nfunction bindWith(input: Object) {\n\n    if(typeof input !== \"object\") {\n        Helpers.wrongInput('bindWith', 'Object', input)\n        return;\n    }\n\n    return function(...args) {\n        Helpers.handler(args, input, handleClass, handleMethod, handleProp)\n    }\n}\n\nexport default bindWith"]}